import os
import sys

CURRENCY   = 'ETH'
ORDER      =    1
TRAIN_FRAC =    1
BATCH_SIZE =    1
HIST_SIZE  =  500
TARG_SIZE  =   10
OVERLAP    =    0
NUM_EPOCHS =   5
LR         =  5e-5

## variable determines the codebase version
## 1 uses only high/low prices as training data
## 2 uses high/low + open/close as training data
VER        =    1

if      (VER == 1): NUM_DATA_CHANNELS = 2
elif    (VER == 2): NUM_DATA_CHANNELS = 4

DATA_FILE = 'ETH_USD_2015-08-09_2020-12-26-CoinDesk.csv'
#DATA_FILE = 'BTC_USD_2013-10-01_2020-12-26-CoinDesk.csv'

## creates a save path for a model                                                                                                                                       
def create_save_path(currency, order, train_frac, batch_size, hist_size, targ_size, overlap, learning_rate):
    specs = ''
    specs += currency
    specs += '__'
    specs += 'ORDER_'+str(order)
    specs += '__'
    specs += 'TRAIN_FRAC_'+str(train_frac)
    specs += '__'
    specs += 'BATCH_SIZE_'+str(batch_size)
    specs += '__'
    specs += 'HIST_SIZE_'+str(hist_size)
    specs += '__'
    specs += 'TARG_SIZE_'+str(targ_size)
    specs += '__'
    specs += 'OVERLAP_'+str(overlap)
    specs += '__'
    specs += 'LR_'+str(learning_rate)
    specs += '__'

    if (VER == 2):
        specs += 'VER_2'
        specs += '__'

    model_save_path = './build_tools/'+specs+'lstm_saves.pth'
    return model_save_path

MODEL_SAVE_PATH = create_save_path(CURRENCY, ORDER, TRAIN_FRAC, BATCH_SIZE, HIST_SIZE, TARG_SIZE, OVERLAP, LR)
